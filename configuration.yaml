default_config:

homeassistant:
  external_url: !secret external_url

frontend:
  extra_module_url:
    - /local/card-mod.js
  themes: !include_dir_merge_named themes

tts:
  - platform: google_translate

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

tplink:
  discovery: true
  strip: !secret tplink_strip_ips

http:
  use_x_forwarded_for: true
  trusted_proxies: !secret http_trusted_proxies

template: !include_dir_merge_list templates

lovelace:
  mode: yaml
  resources:
    [
      { url: /local/button-card.js, type: module },
    ]

recorder:
  purge_keep_days: 5
  db_url: !secret recorder_db_url

influxdb:
  api_version: 2
  ssl: false
  host: !secret influxdb_host
  port: !secret influxdb_port
  token: !secret influxdb_token
  organization: !secret influxdb_organization
  bucket: !secret influxdb_bucket
  include:
    entities:
      - fan.living_room_air_filter
      - climate.hallway
      - weather.home

    entity_globs:
      # smart meter sensors
      - sensor.smart_meter_*
      # air quality sensors
      - sensor.*_air_quality
      - sensor.*_filter_life
      - sensor.*_pm2_5
      # temperature sensors
      - sensor.*_temperature
      - sensor.*_humidity

      # anything that should be exported (see templates)
      - sensor.*_export

mqtt:
  sensor:
    
    ####
    ##
    ## Local MQTT for Glow IHD
    ## 
    ## Energy imports using the Glow IHD via local MQTT
    ## see: https://www.speaktothegeek.co.uk/2022/06/hildebrand-glow-update-local-mqtt-and-home-assistant/
    ##
    ####

    - name: "Smart Meter Electricity: Power"
      unique_id: "smart_meter_electricity_power"
      state_topic: !secret smart_meter_electricity_power_topic
      device_class: "power"
      unit_of_measurement: "W"
      state_class: "measurement"
      value_template: "{{ (value_json['electricitymeter']['power']['value'] * 1000) | round() }}"
      icon: "mdi:flash"
    
    - name: "Smart Meter Gas: Power"
      unique_id: "smart_meter_gas_power"
      state_topic: !secret smart_meter_gas_power_topic
      device_class: "power"
      unit_of_measurement: "W"
      state_class: "measurement"
      value_template: "{{ (value_json['gasmeter']['power']['value'] * 1000) | round() }}"
      icon: "mdi:fire"
    
    - name: "Smart Meter Electricity: Energy Import"
      unique_id: "smart_meter_electricity_energy_import"
      state_topic: !secret smart_meter_electricity_power_topic
      device_class: "energy"
      unit_of_measurement: "kWh"
      state_class: "total_increasing"
      value_template: >
        {% if value_json['electricitymeter']['energy']['import']['cumulative'] == 0 %}
          {{ states('sensor.smart_meter_electricity_energy_import') }}
        {% else %}
          {{ value_json['electricitymeter']['energy']['import']['cumulative'] }}
        {% endif %}
      icon: "mdi:flash"
    
    - name: "Smart Meter Gas: Import"
      unique_id: "smart_meter_gas_import"
      state_topic: !secret smart_meter_gas_power_topic
      device_class: "energy"
      unit_of_measurement: "kWh"
      state_class: "total_increasing"
      value_template: >
        {% if value_json['gasmeter']['energy']['import']['cumulative'] == 0 %}
          {{ states('sensor.smart_meter_gas_import') }}
        {% else %}
          {{ value_json['gasmeter']['energy']['import']['cumulative'] }}
        {% endif %}
      icon: "mdi:fire"